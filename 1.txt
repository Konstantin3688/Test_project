    " Заголовки "

# Заголовок первого уровня #

## Заголовок второго уровня ##

### третий уровень ###

#### четвертый ####

##### пятый #####

###### шестой ######

    " Цитаты "

>Это пример цитаты,
>в которой перед каждой строкой
>ставится угловая скобка.

>Это пример цитаты,
в которой угловая скобка
ставится только перед началом нового параграфа.

>Второй параграф.

> Первый уровень цитирования
>> Второй уровень цитирования
>>> Третий уровень цитирования
>
>Первый уровень цитирования

    " Списки " 

1. Элемент
2. Элемент
3. Элемент

* Другой элемент
* Совсем другой элемент
* Совсем элемент

- Такой элемент
- Сякой элемент
- ну ты понял

1. Элемент списка с цитатой:

    > Это цитата
    > внутри элемента списка.

 2. Второй элемент списка

Горизонтальные линии (разделители)

Первая часть текста, который необходимо разделить
***
Вторая часть текста, который необходимо разделить
***

    " Выделение текста "

*Курсив* 

**Полужирный**

***Полужирный курсив***

`Подсвеченный`

~~Зачеркнутый~~

    " Ссылки "

Это [ссылка]( "Агентство TexTerra") с тайтлом.


[Эта ссылка](http://example.net/) без заголовка.


<https://texterra.ru/> – а это безанкорная ссылка.

# Ссылки 

[GeekBrains] (http://gb.ru)

![Это как создать таблицы](Таблицы.png)

## Чек-лист

 Чек-бокс получится, если в начале строки вставить пробел, заключенный с двух сторон в квадратные скобки. Можно сразу задать выполненную задачу с помощью [X]. С оформлением ссылок по-другому – в квадратных скобках или текст, или ничего.

[X] Посмотреть лекцию

[X] Попрактиковаться

[X] Посмотреть семинар

[ ] Сдать домашнее задание


## Таблицы 

 Для этого используются всего два символа: вертикальная черта и дефис. Дефисы работают примерно так же, как в случае с горизонтальной линией: отделяют заголовки от других строк, при этом количество символов значения не имеет. Вертикальная черта служит границей между столбцами.

| Язык | Метка |
|------|-------|
|JavaScript|javascript|
|C++|cpp|
|HTML|html|
|MarkDown|md|
|JSON|json|
|Python|python|
|SQL|sql|
|VB|vb|
|.Net Console|dotnetcli|

# Работа с репозиторием чужого аккаунта

1. Делаем `fork` (вилка) интересующего нас репозитория
2. Мы делаем `git clone` для нашей версии этого репозитория
3. Создаем ветку с предлагаемыми изменениями
4. Производим все изменения только в этой ветке
5. Отправляем эти изменения на свой аккаунт (`push`)
6. В окне на [GitHub](https://github.com/) появляется возможность отправить `pull request`.